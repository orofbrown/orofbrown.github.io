{"version":3,"sources":["theme/constants.ts","theme/pokeball.png","theme/index.tsx","service.ts","theme/utils.ts","Card.tsx","UtilityComponents.tsx","GridCard.tsx","Home.tsx","DetailCard.tsx","App.tsx","index.tsx"],"names":["lightShades","light","main","dark","darkShades","contrastText","gray","100","200","300","500","750","900","950","palette","oranges","blues","greens","yellows","lightOranges","reds","teals","lightGrays","primary","secondary","error","text","disabled","hint","background","default","paper","type","fontSize","defaultTheme","spacing","logo","ThemeContext","React","createContext","dispatch","state","themeReducer","prevState","themeName","ThemeProvider","children","useReducer","value","Provider","useTheme","ctx","useContext","Error","buildUrl","path","getAll","pageParam","queryParams","fullUrl","URL","forEach","key","val","searchParams","append","fetch","toString","then","res","json","get","url","OPACITY_70_PERCENT","Math","ceil","hexWithOpacity","originalValue","opacityLevel","opacity","undefined","IS_MOBILE","window","innerWidth","Card","theme","colors","cardSize","card","alignItems","backgroundColor","backgroundPositionX","backgroundRepeat","border","color","display","height","imageRendering","justifyContent","lineBreak","margin","textDecoration","width","textBar","borderTop","padding","makeStyles","BottomSpacer","style","marginTop","marginBottom","styleOverrides","styles","message","Loading","StatusContainer","data","isLoading","GridCard","resource","queryResults","useQuery","statusProps","responseData","pokemon","pokemonName","name","replace","l","toUpperCase","backgroundImage","sprites","front_default","to","id","onScrollEnd","callback","hasNextPage","html","document","querySelector","scrollTop","scrollHeight","innerHeight","scrollEnd","Home","spinnerSize","grid","flexWrap","spinner","animationDuration","animationIterationCount","animationName","animationDirection","transformOrigin","isLoadingBall","useInfiniteQuery","getNextPageParam","lastPage","pages","next","parse","search","slice","offset","fetchNextPage","isFetchingNextPage","status","scrollListener","useCallback","addEventListener","useEffect","map","page","results","src","alt","DetailCard","detailCard","backgroundSize","useParams","resourceUrl","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","App","useState","setLogo","fetchQuery","item","Consumer","headerFontSize","logoSize","app","minHeight","overflow","header","fontWeight","marginLeft","marginRight","backgroundPosition","table","QueryClientProvider","client","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.23dbf58e.chunk.js","sourcesContent":["// Primary colors\nconst lightShades = {\n  // Background shades\n  light: '#fff',\n  main: '#f2f2f2',\n  dark: '#999',\n};\nconst darkShades = {\n  // Text & Copy\n  light: '#666',\n  main: '#4d4d4d',\n  dark: '#333',\n  contrastText: lightShades.main,\n};\nconst oranges = {\n  // Nav & Active state\n  light: '#f6a683',\n  main: '#f26c32',\n  dark: '#b14f25',\n  contrastText: lightShades.main,\n};\n\n// Secondary colors / Status colors\nconst blues = {\n  // Text Links & Info\n  light: '#9cdaee',\n  main: '#00b2e2',\n  dark: '#007797',\n};\nconst greens = {\n  // OK / Success status\n  light: '#b6e8cb',\n  main: '#49c57e',\n  dark: '#36905c',\n};\nconst yellows = {\n  light: '#fd37a8',\n  main: '#ffc82b',\n  dark: 'bb9320',\n};\nconst lightOranges = {\n  light: '#fcd4b5',\n  main: '#fe9646',\n  dark: '#ba6e33',\n};\nconst reds = {\n  // Error status\n  light: '#f49c92',\n  main: '#ef5b4b',\n  dark: '#af4337',\n};\nconst teals = {\n  light: '#b2dfdb',\n  main: '#36c8b5',\n  dark: '#289385',\n  contrastText: darkShades.dark,\n};\n\n// Text & Structure\nconst gray = {\n  100: '#222222',\n  200: '#333333',\n  300: '#555555',\n  500: '#888888',\n  750: '#aaaaaa',\n  900: '#e5e5e5',\n  950: '#f2f2f2',\n};\n\nconst lightGrays = {\n  light: gray[950],\n  main: gray[900],\n  dark: gray[750],\n};\n\nconst palette = {\n  oranges,\n  darkShades,\n  lightShades,\n  blues,\n  greens,\n  yellows,\n  lightOranges,\n  reds,\n  teals,\n  lightGrays,\n};\n\nconst light = {\n  palette: {\n    primary: palette.oranges,\n    secondary: palette.teals,\n    error: palette.reds,\n    gray,\n    text: {\n      primary: palette.darkShades.main, // most text in body & titles\n      secondary: palette.darkShades.dark, // headers for things like tables & tabs\n      disabled: palette.lightGrays.main,\n      hint: palette.lightGrays.light,\n    },\n    background: {\n      default: palette.lightShades.main,\n      paper: palette.lightShades.light,\n    },\n    type: 'light',\n  },\n};\n\nconst dark = {\n  palette: {\n    primary: palette.oranges,\n    secondary: palette.lightShades,\n    error: palette.reds,\n    gray,\n    text: {\n      primary: palette.lightShades.light, // most text in body & titles\n      secondary: palette.lightShades.main, // headers for things like tables & tabs\n      disabled: palette.lightGrays.main,\n      hint: palette.lightGrays.light,\n    },\n    background: {\n      default: palette.darkShades.dark,\n      paper: palette.darkShades.main,\n    },\n    type: 'dark',\n  },\n};\n\nconst text = {\n  fontSize: 20,\n};\n\nexport { dark, light, text };\n","export default __webpack_public_path__ + \"static/media/pokeball.a508475f.png\";","import React from 'react';\nimport { ProviderProps, ThemeProviderType, Theme } from './types';\nimport { dark, light, text } from './constants';\nimport logo from './pokeball.png';\n\n/* TODO\nexport function setPageBackground(color: string): void {\n  const page = document.querySelector(\"html\");\n  if (page && color) {\n    page.style.backgroundColor = color;\n  }\n}\n\nexport function switchBackground(checked: boolean): string {\n  const bgColor = checked ? palette.white.main : palette.darkGray.dark;\n  setPageBackground(bgColor);\n  return checked ? \"light\" : \"dark\";\n}\n*/\n\nconst defaultTheme = { ...dark, spacing: 8, text, logo };\nconst ThemeContext = React.createContext<ThemeProviderType>({\n  dispatch: () => {},\n  state: defaultTheme,\n});\n\nfunction themeReducer(prevState: Theme, themeName: string): Theme {\n  switch (themeName) {\n    case 'light':\n      return { ...light, logo, spacing: 8, text };\n    default:\n      return defaultTheme;\n  }\n}\n\nfunction ThemeProvider({ children }: ProviderProps) {\n  const [state, dispatch] = React.useReducer(themeReducer, defaultTheme);\n  const value = { dispatch, state };\n\n  return (\n    <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\n  );\n}\n\nfunction useTheme() {\n  const ctx = React.useContext(ThemeContext);\n  if (!ctx) {\n    throw new Error('useAccess must be used within an AccessProvider');\n  }\n  return ctx;\n}\n\nexport { ThemeContext, ThemeProvider, useTheme };\n","import { Pokemon as PokemonResponse, PokemonList } from './model/ResponseTypes';\n\nexport const buildUrl = (path: string) => `https://pokeapi.co/api/v2/${path}`;\n\nexport function getAll({ pageParam = 0 }: any): Promise<PokemonList> {\n  const queryParams = [\n    ['offset', pageParam],\n    ['limit', 66],\n  ];\n  const fullUrl = new URL(buildUrl('pokemon'));\n  queryParams.forEach(([key, val]) => fullUrl.searchParams.append(key, val));\n\n  return fetch(fullUrl.toString()).then((res) => res.json());\n}\n\nexport function get(url: string): Promise<PokemonResponse> {\n  return fetch(url).then((res) => res.json());\n}\n","const exists = (val?: any) => val !== undefined && val !== null;\n\nconst OPACITY_70_PERCENT = Math.ceil(0.7 * 255);\nexport const hexWithOpacity = (\n  originalValue: string,\n  opacityLevel?: number,\n) => {\n  // opacity should be int > 0 and < 256\n  let opacity = opacityLevel;\n  if (!exists(opacityLevel)) {\n    opacity = OPACITY_70_PERCENT;\n  } else if (opacityLevel! % 1 > 0) {\n    // opacityLevel is a float\n    opacity = opacityLevel! * 255;\n  }\n\n  return originalValue + opacity!.toString(16);\n};\n","import React from 'react';\nimport { useTheme } from './theme';\nimport { Theme } from './theme/types';\nimport { hexWithOpacity } from './theme/utils';\n\nconst { innerWidth } = window;\nconst IS_MOBILE = innerWidth <= 480;\n\ntype CardProps = {\n  children: (data: any) => React.ReactElement;\n};\n\nconst makeStyles = (theme: Theme) => {\n  const { palette: colors, spacing } = theme;\n  // TODO: figure out best way to do mobile styles\n  const cardSize = IS_MOBILE ? 112 : 128;\n\n  return {\n    card: {\n      alignItems: 'flex-end',\n      backgroundColor: colors.gray[300],\n      backgroundPositionX: 'center',\n      backgroundRepeat: 'no-repeat',\n      border: `2px solid ${colors.gray[100]}`,\n      color: colors.text.primary,\n      display: 'flex',\n      height: cardSize,\n      imageRendering: 'pixelated',\n      justifyContent: 'center',\n      lineBreak: 'normal',\n      margin: spacing / 2,\n      textDecoration: 'none',\n      width: cardSize,\n    },\n    textBar: {\n      backgroundColor: hexWithOpacity(colors.gray[500]),\n      borderTop: `2px solid ${colors.gray[750]}`,\n      padding: spacing,\n      width: '100%',\n    },\n  };\n};\n\nexport default function Card({ children }: CardProps) {\n  const styles = makeStyles(useTheme().state);\n  return children(styles);\n}\n","import React from 'react';\nimport Card from './Card';\n\nexport const BottomSpacer = () => (\n  <div style={{ marginTop: 32, marginBottom: 64 }}></div>\n);\n\nexport const Error = ({\n  error,\n  styleOverrides,\n}: {\n  error: Error | null;\n  styleOverrides?: any;\n}) => (\n  <Card>\n    {(styles: any) => (\n      <section style={{ ...styles.card, ...styleOverrides }}>\n        <article style={styles.textBar}>{error!.message}</article>\n      </section>\n    )}\n  </Card>\n);\n\nexport const Loading = ({ styleOverrides }: { styleOverrides?: any }) => (\n  <Card>\n    {(styles: any) => (\n      <section style={{ ...styles.card, ...styleOverrides }}>\n        <article style={styles.textBar}>Loading...</article>\n      </section>\n    )}\n  </Card>\n);\n\ntype StatusProps = {\n  children: (data: any) => React.ReactElement;\n  data: any;\n  error: Error | null;\n  isLoading: boolean;\n  styleOverrides?: any;\n};\nexport const StatusContainer = ({\n  children,\n  data,\n  error,\n  isLoading,\n  styleOverrides,\n}: StatusProps) => {\n  const styles = styleOverrides || {};\n  if (error) {\n    return <Error error={error} styleOverrides={styles} />;\n  } else if (isLoading) {\n    return <Loading styleOverrides={styles} />;\n  }\n\n  return children(data);\n};\n","import React from 'react';\nimport { useQuery } from 'react-query';\nimport { Link } from 'react-router-dom';\nimport { get } from './service';\nimport {\n  Pokemon as PokemonResponse,\n  PokemonResource,\n} from './model/ResponseTypes';\nimport { StatusContainer } from './UtilityComponents';\nimport Card from './Card';\n\ntype GridCardProps = {\n  resource: PokemonResource;\n  style?: any;\n};\n\nexport default function GridCard({ resource, style }: GridCardProps) {\n  const queryResults = useQuery<PokemonResponse, Error>(resource.url, () =>\n    get(resource.url),\n  );\n  const statusProps = { ...queryResults };\n\n  return (\n    <StatusContainer {...statusProps}>\n      {(responseData: PokemonResponse) => {\n        const pokemon: PokemonResponse | undefined = responseData;\n        const pokemonName = pokemon\n          ? pokemon.name.replace(/^\\w/, (l) => l.toUpperCase())\n          : '';\n\n        return (\n          <Card>\n            {(styles: any) => (\n              <Link\n                style={{\n                  ...styles.card,\n                  ...style,\n                  backgroundImage: `url(${pokemon?.sprites.front_default})`,\n                }}\n                to={`/${pokemon?.id}`}\n              >\n                <article style={styles.textBar}>{pokemonName}</article>\n              </Link>\n            )}\n          </Card>\n        );\n      }}\n    </StatusContainer>\n  );\n}\n","import React from 'react';\nimport { useInfiniteQuery, useQuery } from 'react-query';\nimport { parse } from 'querystring';\nimport { useTheme } from './theme';\nimport { Theme } from './theme/types';\nimport { buildUrl, get, getAll } from './service';\nimport { PokemonList, PokemonResource } from './model/ResponseTypes';\nimport GridCard from './GridCard';\nimport { BottomSpacer, Error, Loading } from './UtilityComponents';\n\nconst { innerWidth } = window;\nconst IS_MOBILE = innerWidth <= 480;\n\nconst makeStyles = ({ palette: colors, spacing }: Theme) => {\n  // TODO: figure out best way to do mobile styles\n  const margin = IS_MOBILE ? 0 : spacing * 2;\n  const spinnerSize = IS_MOBILE ? 45 : 60;\n\n  return {\n    grid: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      margin,\n    },\n    spinner: {\n      animationDuration: '1s',\n      animationIterationCount: 'infinite',\n      animationName: 'rotateBall',\n      animationDirection: 'forwards',\n      transformOrigin: 'center center',\n      height: spinnerSize,\n      imageRendering: 'pixelated',\n      margin: spacing * 2,\n      marginBottom: spacing * 3,\n      width: spinnerSize,\n    },\n  };\n};\n\nfunction scrollEnd() {\n  const html = document.querySelector('html');\n  return html!.scrollTop >= html!.scrollHeight - window.innerHeight;\n}\n\nfunction onScrollEnd(callback: Function, hasNextPage?: boolean) {\n  if (scrollEnd() && hasNextPage) {\n    callback();\n  }\n}\n\nexport default function Home() {\n  const styles = makeStyles(useTheme().state);\n\n  const { isLoading: isLoadingBall, data: spinner } = useQuery('pokeBall', () =>\n    get(buildUrl('item/poke-ball')),\n  );\n\n  const {\n    data,\n    error,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n    status,\n  } = useInfiniteQuery<PokemonList, Error>('getAll', getAll, {\n    getNextPageParam: (lastPage, pages) => {\n      if (lastPage.next) {\n        const queryString = parse(new URL(lastPage.next).search.slice(1));\n        return queryString.offset;\n      }\n    },\n  });\n\n  const scrollListener = React.useCallback(() => {\n    document.addEventListener('scroll', () =>\n      onScrollEnd(fetchNextPage, hasNextPage),\n    );\n    if (window.innerWidth > 1920) {\n      fetchNextPage();\n    }\n  }, [fetchNextPage, hasNextPage]);\n\n  React.useEffect(() => {\n    scrollListener();\n  }, [scrollListener]);\n\n  if (status === 'loading') {\n    return <Loading />;\n  } else if (status === 'error') {\n    return <Error error={error} />;\n  }\n\n  const { pages } = data!;\n  return (\n    <>\n      {/* @ts-ignore */}\n      <div style={styles.grid}>\n        {pages.map((page) => {\n          return page.results.map((resource: PokemonResource) => (\n            <GridCard key={resource.name} resource={resource}></GridCard>\n          ));\n        })}\n      </div>\n      {!isLoadingBall && isFetchingNextPage ? (\n        <img\n          src={spinner!.sprites.default}\n          alt=\"Loading\"\n          // @ts-ignore\n          style={styles.spinner}\n        />\n      ) : (\n        <BottomSpacer />\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport { useQuery } from 'react-query';\nimport { useParams } from 'react-router';\nimport { get, buildUrl } from './service';\nimport { Pokemon as PokemonResponse } from './model/ResponseTypes';\nimport { useTheme } from './theme';\nimport { Theme } from './theme/types';\nimport { StatusContainer } from './UtilityComponents';\nimport Card from './Card';\n\ntype ParamsType = {\n  id: string;\n};\n\nconst makeStyles = ({ palette: colors, spacing }: Theme) => {\n  const cardSize = spacing * 32;\n\n  return {\n    detailCard: {\n      backgroundSize: '100%',\n      height: cardSize,\n      // TODO: flex-box instead?\n      margin: '0 auto',\n      width: cardSize,\n    },\n  };\n};\n\nexport default function DetailCard() {\n  const { detailCard: styleOverrides } = makeStyles(useTheme().state);\n  const { id } = useParams<ParamsType>();\n  const resourceUrl = buildUrl(`pokemon/${id}`);\n  const { isLoading, error, data } = useQuery<PokemonResponse, Error>(\n    resourceUrl,\n    () => get(resourceUrl),\n  );\n  const statusProps = { data, error, isLoading };\n\n  return (\n    <StatusContainer {...statusProps} styleOverrides={styleOverrides}>\n      {(responseData: PokemonResponse) => {\n        const pokemon: PokemonResponse | undefined = responseData;\n        const pokemonName = pokemon\n          ? pokemon.name.replace(/^\\w/, (l) => l.toUpperCase())\n          : '';\n\n        return (\n          <Card>\n            {(styles: any) => (\n              <section\n                // @ts-ignore\n                style={{\n                  ...styles.card,\n                  ...styleOverrides,\n                  backgroundImage: `url(${responseData?.sprites.front_default})`,\n                }}\n              >\n                <article style={styles.textBar}>{pokemonName}</article>\n              </section>\n            )}\n          </Card>\n        );\n      }}\n    </StatusContainer>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ThemeProvider, ThemeContext } from './theme';\nimport { Theme } from './theme/types';\nimport Dashboard from './Home';\nimport DetailCard from './DetailCard';\nimport { buildUrl, get } from './service';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n    },\n  },\n});\n\nconst makeStyles = ({ palette: colors, spacing }: Theme, logo: string) => {\n  const { innerWidth } = window;\n  const headerFontSize = innerWidth <= 480 ? '3rem' : '5rem';\n  const logoSize = innerWidth <= 480 ? 60 : 90;\n\n  return {\n    app: {\n      backgroundColor: colors.background.default,\n      color: colors.text.primary,\n      minHeight: '100%',\n      overflow: 'scroll',\n    },\n    header: {\n      alignItems: 'center',\n      display: 'flex',\n      fontSize: headerFontSize,\n      fontWeight: 300,\n      justifyContent: 'center',\n      marginBottom: '2rem',\n      marginLeft: spacing,\n      marginRight: spacing,\n    },\n    logo: {\n      backgroundImage: `url(${logo})`,\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: '150%',\n      height: logoSize,\n      imageRendering: 'pixelated',\n      width: logoSize,\n    },\n    table: { margin: 32, width: '90%' },\n  };\n};\n\nexport default function App() {\n  const [logo, setLogo] = React.useState('');\n  useEffect(() => {\n    queryClient\n      .fetchQuery<any, Error, any>('pokeBall', () =>\n        get(buildUrl('item/poke-ball')),\n      )\n      .then((item) => {\n        setLogo(item.sprites.default);\n      });\n  }, []);\n\n  return (\n    <ThemeProvider>\n      <ThemeContext.Consumer>\n        {({ dispatch, state: theme }) => {\n          const styles = makeStyles(theme, logo);\n\n          return (\n            <QueryClientProvider client={queryClient}>\n              <main style={styles.app}>\n                <h1 style={styles.header}>\n                  {/* @ts-ignore */}\n                  POKÉ<span style={styles.logo}></span>DEX\n                </h1>\n                <Router>\n                  <Switch>\n                    <Route path=\"/\" exact>\n                      <Dashboard />\n                    </Route>\n                    <Route path=\"/:id\">\n                      <DetailCard />\n                    </Route>\n                  </Switch>\n                </Router>\n              </main>\n            </QueryClientProvider>\n          );\n        }}\n      </ThemeContext.Consumer>\n    </ThemeProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}