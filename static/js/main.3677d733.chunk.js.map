{"version":3,"sources":["theme/constants.ts","theme/pokeball.png","theme/index.tsx","service.ts","Dashboard.tsx","Detail.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["lightShades","light","main","dark","darkShades","contrastText","grays","palette","oranges","blues","greens","yellows","lightOranges","reds","teals","lightGrays","primary","secondary","error","grey","50","100","400","600","700","800","text","disabled","hint","background","default","paper","type","fontSize","defaultTheme","spacing","logo","ThemeContext","React","createContext","dispatch","state","themeReducer","prevState","themeName","ThemeProvider","children","useReducer","value","Provider","useTheme","ctx","useContext","Error","getLogo","fetch","then","res","json","getAll","pageParam","IS_MOBILE","window","innerWidth","makeStyles","cardSize","spinnerSize","grid","display","flexWrap","justifyContent","margin","card","alignItems","backgroundColor","backgroundPositionX","backgroundRepeat","border","imageRendering","height","lineBreak","width","name","borderTop","padding","spinner","animationDuration","animationIterationCount","animationName","animationDirection","transformOrigin","marginBottom","message","Loading","BottomSpacer","style","marginTop","GridCard","resource","styles","useQuery","url","isLoading","data","pokemon","pokemonName","replace","l","toUpperCase","backgroundImage","sprites","front_default","Dashboard","isLoadingBall","useInfiniteQuery","getNextPageParam","lastPage","pages","next","parse","URL","search","slice","offset","fetchNextPage","hasNextPage","isFetchingNextPage","status","scrollListener","useCallback","document","addEventListener","callback","html","querySelector","scrollTop","scrollHeight","innerHeight","onScrollEnd","useEffect","map","page","results","src","alt","Detail","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","App","useState","setLogo","fetchQuery","item","Consumer","colors","headerFontSize","logoSize","app","color","minHeight","overflow","header","fontWeight","marginLeft","marginRight","backgroundPosition","backgroundSize","table","QueryClientProvider","client","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3677d733.chunk.js","sourcesContent":["// Primary colors\nconst lightShades = {\n  // Background shades\n  light: \"#fff\",\n  main: \"#f2f2f2\",\n  dark: \"#999\",\n};\nconst darkShades = {\n  // Text & Copy\n  light: \"#666\",\n  main: \"#4d4d4d\",\n  dark: \"#333\",\n  contrastText: lightShades.main,\n};\nconst oranges = {\n  // Nav & Active state\n  light: \"#f6a683\",\n  main: \"#f26c32\",\n  dark: \"#b14f25\",\n  contrastText: lightShades.main,\n};\n\n// Secondary colors / Status colors\nconst blues = {\n  // Text Links & Info\n  light: \"#9cdaee\",\n  main: \"#00b2e2\",\n  dark: \"#007797\",\n};\nconst greens = {\n  // OK / Success status\n  light: \"#b6e8cb\",\n  main: \"#49c57e\",\n  dark: \"#36905c\",\n};\nconst yellows = {\n  light: \"#fd37a8\",\n  main: \"#ffc82b\",\n  dark: \"bb9320\",\n};\nconst lightOranges = {\n  light: \"#fcd4b5\",\n  main: \"#fe9646\",\n  dark: \"#ba6e33\",\n};\nconst reds = {\n  // Error status\n  light: \"#f49c92\",\n  main: \"#ef5b4b\",\n  dark: \"#af4337\",\n};\nconst teals = {\n  light: \"#b2dfdb\",\n  main: \"#36c8b5\",\n  dark: \"#289385\",\n  contrastText: darkShades.dark,\n};\n\n// Text & Structure\nexport const grays = [\n  \"#f2f2f2\",\n  \"#e5e5e5\",\n  \"#999\",\n  \"#666\",\n  \"#4d4d4d\",\n  \"#333\",\n  \"#000\",\n];\n\nconst lightGrays = {\n  light: grays[1],\n  main: grays[2],\n  dark: grays[6],\n};\n\nconst palette = {\n  oranges,\n  darkShades,\n  lightShades,\n  blues,\n  greens,\n  yellows,\n  lightOranges,\n  reds,\n  teals,\n  lightGrays,\n};\n\nconst light = {\n  palette: {\n    primary: palette.oranges,\n    secondary: palette.teals,\n    error: palette.reds,\n    grey: {\n      50: grays[0],\n      100: grays[1],\n      400: grays[2],\n      600: grays[3],\n      700: grays[4],\n      800: grays[5],\n    },\n    text: {\n      primary: palette.darkShades.main, // most text in body & titles\n      secondary: palette.darkShades.dark, // headers for things like tables & tabs\n      disabled: palette.lightGrays.main,\n      hint: palette.lightGrays.light,\n    },\n    background: {\n      default: palette.lightShades.main,\n      paper: palette.lightShades.light,\n    },\n    type: \"light\",\n  },\n};\n\nconst dark = {\n  palette: {\n    primary: palette.oranges,\n    secondary: palette.lightShades,\n    error: palette.reds,\n    grey: {\n      50: grays[0],\n      100: grays[1],\n      400: grays[2],\n      600: grays[3],\n      700: grays[4],\n      800: grays[5],\n    },\n    text: {\n      primary: palette.lightShades.light, // most text in body & titles\n      secondary: palette.lightShades.main, // headers for things like tables & tabs\n      disabled: palette.lightGrays.main,\n      hint: palette.lightGrays.light,\n    },\n    background: {\n      default: palette.darkShades.dark,\n      paper: palette.darkShades.main,\n    },\n    type: \"dark\",\n  },\n};\n\nconst text = {\n  fontSize: 20,\n};\n\nexport { dark, light, text };\n","export default __webpack_public_path__ + \"static/media/pokeball.a508475f.png\";","import React from 'react';\nimport { ProviderProps, ThemeProviderType, Theme } from './types';\nimport { dark, light, text } from './constants';\nimport logo from './pokeball.png';\n\n/* TODO\nexport function setPageBackground(color: string): void {\n  const page = document.querySelector(\"html\");\n  if (page && color) {\n    page.style.backgroundColor = color;\n  }\n}\n\nexport function switchBackground(checked: boolean): string {\n  const bgColor = checked ? palette.white.main : palette.darkGray.dark;\n  setPageBackground(bgColor);\n  return checked ? \"light\" : \"dark\";\n}\n*/\n\nconst defaultTheme = { ...dark, spacing: 8, text, logo };\nconst ThemeContext = React.createContext<ThemeProviderType>({\n  dispatch: () => {},\n  state: defaultTheme,\n});\n\nfunction themeReducer(prevState: Theme, themeName: string): Theme {\n  switch (themeName) {\n    case 'light':\n      return { ...light, logo, spacing: 8, text };\n    default:\n      return defaultTheme;\n  }\n}\n\nfunction ThemeProvider({ children }: ProviderProps) {\n  const [state, dispatch] = React.useReducer(themeReducer, defaultTheme);\n  const value = { dispatch, state };\n\n  return (\n    <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\n  );\n}\n\nfunction useTheme() {\n  const ctx = React.useContext(ThemeContext);\n  if (!ctx) {\n    throw new Error('useAccess must be used within a AccessProvider');\n  }\n  return ctx;\n}\n\nexport { ThemeContext, ThemeProvider, useTheme };\n","import { Pokemon as PokemonResponse, PokemonList } from './model/ResponseTypes';\n\nexport function getLogo() {\n  return fetch('https://pokeapi.co/api/v2/item/poke-ball').then((res) =>\n    res.json(),\n  );\n}\n\nexport function getAll({ pageParam = 0 }: any): Promise<PokemonList> {\n  return fetch(\n    `https://pokeapi.co/api/v2/pokemon?offset=${pageParam}&limit=66`,\n  ).then((res) => res.json());\n}\n\nexport function get(url: string): Promise<PokemonResponse> {\n  return fetch(url).then((res) => res.json());\n}\n","import React from 'react';\nimport { useInfiniteQuery, useQuery } from 'react-query';\nimport { parse } from 'querystring';\nimport { useTheme } from './theme';\nimport { Theme } from './theme/types';\nimport { getLogo, get, getAll } from './service';\nimport {\n  Pokemon as PokemonResponse,\n  PokemonList,\n  PokemonResource,\n} from './model/ResponseTypes';\n\ntype GridCardProps = { resource: PokemonResource };\n\nconst { innerWidth } = window;\nconst IS_MOBILE = innerWidth <= 480;\n\nconst makeStyles = ({ palette: colors, spacing }: Theme) => {\n  // TODO: figure out best way to do mobile styles\n  const cardSize = IS_MOBILE ? 112 : 128;\n  const margin = IS_MOBILE ? 0 : spacing * 2;\n  const spinnerSize = IS_MOBILE ? 45 : 60;\n  // TODO: put these in theme\n  const cardBackground = '#555';\n  const cardBorderColor = '#222';\n  const nameTitleTopBorder = '#aaa';\n  const nameTitleBackground = '#888';\n\n  return {\n    grid: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      margin,\n    },\n    card: {\n      alignItems: 'flex-end',\n      backgroundColor: cardBackground,\n      backgroundPositionX: 'center',\n      backgroundRepeat: 'no-repeat',\n      border: `2px solid ${cardBorderColor}`,\n      display: 'flex',\n      imageRendering: 'pixelated',\n      justifyContent: 'center',\n      height: cardSize,\n      lineBreak: 'normal',\n      margin: spacing / 2,\n      width: cardSize,\n    },\n    name: {\n      backgroundColor: nameTitleBackground,\n      borderTop: `2px solid ${nameTitleTopBorder}`,\n      padding: spacing,\n      width: '100%',\n    },\n    spinner: {\n      animationDuration: '1s',\n      animationIterationCount: 'infinite',\n      animationName: 'rotateBall',\n      animationDirection: 'forwards',\n      transformOrigin: 'center center',\n      height: spinnerSize,\n      imageRendering: 'pixelated',\n      margin: spacing * 2,\n      marginBottom: spacing * 3,\n      width: spinnerSize,\n    },\n  };\n};\n\nconst Error = ({ error }: any) => <div>Error: {error.message}</div>;\nconst Loading = () => <div>Loading...</div>;\nconst BottomSpacer = () => (\n  <div style={{ marginTop: 32, marginBottom: 64 }}></div>\n);\n\nfunction GridCard({ resource }: GridCardProps) {\n  const styles = makeStyles(useTheme().state);\n  const { isLoading, error, data } = useQuery<PokemonResponse, Error>(\n    resource.url,\n    () => get(resource.url),\n  );\n\n  if (error) {\n    return <Error error={error} />;\n  }\n\n  const pokemon: PokemonResponse | undefined = data;\n  const pokemonName = pokemon\n    ? pokemon.name.replace(/^\\w/, (l) => l.toUpperCase())\n    : '';\n\n  return (\n    <section\n      // @ts-ignore\n      style={{\n        ...styles.card,\n        backgroundImage: `url(${pokemon?.sprites.front_default})`,\n      }}\n    >\n      {isLoading ? (\n        <article style={styles.name}>Loading...</article>\n      ) : (\n        <article style={styles.name}>{pokemonName}</article>\n      )}\n    </section>\n  );\n}\n\nfunction onScrollEnd(callback: Function, hasNextPage?: boolean) {\n  const html = document.querySelector('html');\n  if (\n    html &&\n    html.scrollTop >= html.scrollHeight - window.innerHeight &&\n    hasNextPage\n  ) {\n    callback();\n  }\n}\n\nexport default function Dashboard() {\n  const styles = makeStyles(useTheme().state);\n  const { isLoading: isLoadingBall, data: spinner } = useQuery(\n    'pokeBall',\n    getLogo,\n  );\n  const {\n    data,\n    error,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n    status,\n  } = useInfiniteQuery<PokemonList, Error>('getAll', getAll, {\n    getNextPageParam: (lastPage, pages) => {\n      if (lastPage.next) {\n        const queryString = parse(new URL(lastPage.next).search.slice(1));\n        return queryString.offset;\n      }\n    },\n  });\n  const scrollListener = React.useCallback(() => {\n    document.addEventListener('scroll', () =>\n      onScrollEnd(fetchNextPage, hasNextPage),\n    );\n  }, [fetchNextPage, hasNextPage]);\n\n  React.useEffect(() => {\n    scrollListener();\n  }, [scrollListener]);\n\n  if (status === 'loading') {\n    return <Loading />;\n  } else if (status === 'error') {\n    return <Error error={error} />;\n  }\n\n  const { pages } = data!;\n  return (\n    <>\n      {/* @ts-ignore */}\n      <div style={styles.grid}>\n        {pages.map((page) => {\n          return page.results.map((resource: PokemonResource) => (\n            <GridCard key={resource.name} resource={resource}></GridCard>\n          ));\n        })}\n      </div>\n      {!isLoadingBall && isFetchingNextPage ? (\n        <img\n          src={spinner.sprites.default}\n          alt=\"Loading\"\n          // @ts-ignore\n          style={styles.spinner}\n        />\n      ) : (\n        <BottomSpacer />\n      )}\n    </>\n  );\n}\n","export default function Detail() {\n  return <div></div>;\n}\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ThemeProvider, ThemeContext } from './theme';\nimport { Theme } from './theme/types';\nimport Dashboard from './Dashboard';\nimport Detail from './Detail';\nimport { getLogo } from './service';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n    },\n  },\n});\n\nconst makeStyles = ({ palette: colors, spacing }: Theme, logo: string) => {\n  const { innerWidth } = window;\n  const headerFontSize = innerWidth <= 480 ? '3rem' : '5rem';\n  const logoSize = innerWidth <= 480 ? 60 : 90;\n\n  return {\n    app: {\n      backgroundColor: colors.background.default,\n      color: colors.text.primary,\n      minHeight: '100%',\n      overflow: 'scroll',\n    },\n    header: {\n      alignItems: 'center',\n      display: 'flex',\n      fontSize: headerFontSize,\n      fontWeight: 300,\n      justifyContent: 'center',\n      marginBottom: '2rem',\n      marginLeft: spacing,\n      marginRight: spacing,\n    },\n    // <img src={logo} style={styles.logo} alt=\"Logo\" />\n    logo: {\n      backgroundImage: `url(${logo})`,\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: '150%',\n      height: logoSize,\n      imageRendering: 'pixelated',\n      width: logoSize,\n    },\n    table: { margin: 32, width: '90%' },\n  };\n};\n\nexport default function App() {\n  const [logo, setLogo] = React.useState('');\n  useEffect(() => {\n    queryClient\n      .fetchQuery<any, Error, any>('pokeBall', getLogo)\n      .then((item) => {\n        setLogo(item.sprites.default);\n      });\n  }, []);\n\n  return (\n    <ThemeProvider>\n      <ThemeContext.Consumer>\n        {({ dispatch, state: theme }) => {\n          const styles = makeStyles(theme, logo);\n\n          return (\n            <QueryClientProvider client={queryClient}>\n              {/* <QueryClient.Consumer>\n                {(qc: any) => {\n                  return ( */}\n              <main style={styles.app}>\n                <h1 style={styles.header}>\n                  {/* @ts-ignore */}\n                  POKÉ<span style={styles.logo}></span>DEX\n                </h1>\n                <Router>\n                  <Switch>\n                    <Route path=\"/\" exact>\n                      <Dashboard />\n                      <Detail />\n                    </Route>\n                  </Switch>\n                </Router>\n              </main>\n              {/* );\n                }}\n              </QueryClient.Consumer> */}\n            </QueryClientProvider>\n          );\n        }}\n      </ThemeContext.Consumer>\n    </ThemeProvider>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}