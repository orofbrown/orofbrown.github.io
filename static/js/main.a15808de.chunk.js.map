{"version":3,"sources":["theme/constants.ts","theme/pokeball.png","theme/index.tsx","service.ts","utility.tsx","GridCard.tsx","Dashboard.tsx","DetailCard.tsx","App.tsx","index.tsx"],"names":["lightShades","light","main","dark","darkShades","contrastText","grays","palette","oranges","blues","greens","yellows","lightOranges","reds","teals","lightGrays","primary","secondary","error","grey","50","100","400","600","700","800","text","disabled","hint","background","default","paper","type","fontSize","defaultTheme","spacing","logo","ThemeContext","React","createContext","dispatch","state","themeReducer","prevState","themeName","ThemeProvider","children","useReducer","value","Provider","useTheme","ctx","useContext","Error","getUrl","path","getLogo","fetch","then","res","json","getAll","pageParam","get","url","BottomSpacer","style","marginTop","marginBottom","message","Loading","StatusContainer","isLoading","IS_MOBILE","window","innerWidth","GridCard","resource","styles","colors","cardSize","card","alignItems","backgroundColor","backgroundPositionX","backgroundRepeat","border","color","display","height","imageRendering","justifyContent","lineBreak","margin","textDecoration","width","name","borderTop","padding","makeStyles","useQuery","statusProps","pokemon","data","pokemonName","replace","l","toUpperCase","backgroundImage","sprites","front_default","to","id","Dashboard","spinnerSize","grid","flexWrap","spinner","animationDuration","animationIterationCount","animationName","animationDirection","transformOrigin","isLoadingBall","useInfiniteQuery","getNextPageParam","lastPage","pages","next","parse","URL","search","slice","offset","fetchNextPage","hasNextPage","isFetchingNextPage","status","scrollListener","useCallback","document","addEventListener","callback","html","querySelector","scrollTop","scrollHeight","innerHeight","onScrollEnd","useEffect","map","page","results","src","alt","DetailCard","detailCard","backgroundSize","useParams","resourceUrl","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","App","useState","setLogo","fetchQuery","item","Consumer","headerFontSize","logoSize","app","minHeight","overflow","header","fontWeight","marginLeft","marginRight","backgroundPosition","table","QueryClientProvider","client","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a15808de.chunk.js","sourcesContent":["// Primary colors\nconst lightShades = {\n  // Background shades\n  light: \"#fff\",\n  main: \"#f2f2f2\",\n  dark: \"#999\",\n};\nconst darkShades = {\n  // Text & Copy\n  light: \"#666\",\n  main: \"#4d4d4d\",\n  dark: \"#333\",\n  contrastText: lightShades.main,\n};\nconst oranges = {\n  // Nav & Active state\n  light: \"#f6a683\",\n  main: \"#f26c32\",\n  dark: \"#b14f25\",\n  contrastText: lightShades.main,\n};\n\n// Secondary colors / Status colors\nconst blues = {\n  // Text Links & Info\n  light: \"#9cdaee\",\n  main: \"#00b2e2\",\n  dark: \"#007797\",\n};\nconst greens = {\n  // OK / Success status\n  light: \"#b6e8cb\",\n  main: \"#49c57e\",\n  dark: \"#36905c\",\n};\nconst yellows = {\n  light: \"#fd37a8\",\n  main: \"#ffc82b\",\n  dark: \"bb9320\",\n};\nconst lightOranges = {\n  light: \"#fcd4b5\",\n  main: \"#fe9646\",\n  dark: \"#ba6e33\",\n};\nconst reds = {\n  // Error status\n  light: \"#f49c92\",\n  main: \"#ef5b4b\",\n  dark: \"#af4337\",\n};\nconst teals = {\n  light: \"#b2dfdb\",\n  main: \"#36c8b5\",\n  dark: \"#289385\",\n  contrastText: darkShades.dark,\n};\n\n// Text & Structure\nexport const grays = [\n  \"#f2f2f2\",\n  \"#e5e5e5\",\n  \"#999\",\n  \"#666\",\n  \"#4d4d4d\",\n  \"#333\",\n  \"#000\",\n];\n\nconst lightGrays = {\n  light: grays[1],\n  main: grays[2],\n  dark: grays[6],\n};\n\nconst palette = {\n  oranges,\n  darkShades,\n  lightShades,\n  blues,\n  greens,\n  yellows,\n  lightOranges,\n  reds,\n  teals,\n  lightGrays,\n};\n\nconst light = {\n  palette: {\n    primary: palette.oranges,\n    secondary: palette.teals,\n    error: palette.reds,\n    grey: {\n      50: grays[0],\n      100: grays[1],\n      400: grays[2],\n      600: grays[3],\n      700: grays[4],\n      800: grays[5],\n    },\n    text: {\n      primary: palette.darkShades.main, // most text in body & titles\n      secondary: palette.darkShades.dark, // headers for things like tables & tabs\n      disabled: palette.lightGrays.main,\n      hint: palette.lightGrays.light,\n    },\n    background: {\n      default: palette.lightShades.main,\n      paper: palette.lightShades.light,\n    },\n    type: \"light\",\n  },\n};\n\nconst dark = {\n  palette: {\n    primary: palette.oranges,\n    secondary: palette.lightShades,\n    error: palette.reds,\n    grey: {\n      50: grays[0],\n      100: grays[1],\n      400: grays[2],\n      600: grays[3],\n      700: grays[4],\n      800: grays[5],\n    },\n    text: {\n      primary: palette.lightShades.light, // most text in body & titles\n      secondary: palette.lightShades.main, // headers for things like tables & tabs\n      disabled: palette.lightGrays.main,\n      hint: palette.lightGrays.light,\n    },\n    background: {\n      default: palette.darkShades.dark,\n      paper: palette.darkShades.main,\n    },\n    type: \"dark\",\n  },\n};\n\nconst text = {\n  fontSize: 20,\n};\n\nexport { dark, light, text };\n","export default __webpack_public_path__ + \"static/media/pokeball.a508475f.png\";","import React from 'react';\nimport { ProviderProps, ThemeProviderType, Theme } from './types';\nimport { dark, light, text } from './constants';\nimport logo from './pokeball.png';\n\n/* TODO\nexport function setPageBackground(color: string): void {\n  const page = document.querySelector(\"html\");\n  if (page && color) {\n    page.style.backgroundColor = color;\n  }\n}\n\nexport function switchBackground(checked: boolean): string {\n  const bgColor = checked ? palette.white.main : palette.darkGray.dark;\n  setPageBackground(bgColor);\n  return checked ? \"light\" : \"dark\";\n}\n*/\n\nconst defaultTheme = { ...dark, spacing: 8, text, logo };\nconst ThemeContext = React.createContext<ThemeProviderType>({\n  dispatch: () => {},\n  state: defaultTheme,\n});\n\nfunction themeReducer(prevState: Theme, themeName: string): Theme {\n  switch (themeName) {\n    case 'light':\n      return { ...light, logo, spacing: 8, text };\n    default:\n      return defaultTheme;\n  }\n}\n\nfunction ThemeProvider({ children }: ProviderProps) {\n  const [state, dispatch] = React.useReducer(themeReducer, defaultTheme);\n  const value = { dispatch, state };\n\n  return (\n    <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\n  );\n}\n\nfunction useTheme() {\n  const ctx = React.useContext(ThemeContext);\n  if (!ctx) {\n    throw new Error('useAccess must be used within a AccessProvider');\n  }\n  return ctx;\n}\n\nexport { ThemeContext, ThemeProvider, useTheme };\n","import { Pokemon as PokemonResponse, PokemonList } from './model/ResponseTypes';\n\nexport const getUrl = (path?: string) =>\n  `https://pokeapi.co/api/v2/${path || ''}`;\n\nexport function getLogo() {\n  return fetch(getUrl('item/poke-ball')).then((res) => res.json());\n}\n\nexport function getAll({ pageParam = 0 }: any): Promise<PokemonList> {\n  return fetch(getUrl(`pokemon?offset=${pageParam}&limit=66`)).then((res) =>\n    res.json(),\n  );\n}\n\nexport function get(url: string): Promise<PokemonResponse> {\n  return fetch(url).then((res) => res.json());\n}\n","import React, { ReactElement } from 'react';\n\nexport const BottomSpacer = () => (\n  <div style={{ marginTop: 32, marginBottom: 64 }}></div>\n);\n\nexport const Error = ({ error }: { error: Error | null }) => (\n  <div>Error: {error?.message}</div>\n);\n\nexport const Loading = () => <div>Loading...</div>;\n\ntype StatusProps = {\n  children: ReactElement;\n  error: Error | null;\n  isLoading: boolean;\n};\nexport const StatusContainer = ({\n  children,\n  error,\n  isLoading,\n}: StatusProps) => {\n  if (error) {\n    return <Error error={error} />;\n  } else if (isLoading) {\n    return <Loading />;\n  }\n\n  return children;\n};\n","import React from 'react';\nimport { useQuery } from 'react-query';\nimport { useTheme } from './theme';\nimport { Theme } from './theme/types';\nimport { Link } from 'react-router-dom';\nimport { get } from './service';\nimport {\n  Pokemon as PokemonResponse,\n  PokemonResource,\n} from './model/ResponseTypes';\nimport { StatusContainer } from './utility';\n\nconst { innerWidth } = window;\nconst IS_MOBILE = innerWidth <= 480;\n\ntype GridCardProps = {\n  resource: PokemonResource;\n  style?: any;\n};\n\nconst makeStyles = ({ palette: colors, spacing }: Theme) => {\n  // TODO: figure out best way to do mobile styles\n  const cardSize = IS_MOBILE ? 112 : 128;\n  // TODO: put these in theme\n  const cardBackground = '#555';\n  const cardBorderColor = '#222';\n  const nameTitleTopBorder = '#aaa';\n  const nameTitleBackground = '#888';\n\n  return {\n    card: {\n      alignItems: 'flex-end',\n      backgroundColor: cardBackground,\n      backgroundPositionX: 'center',\n      backgroundRepeat: 'no-repeat',\n      border: `2px solid ${cardBorderColor}`,\n      color: colors.text.primary,\n      display: 'flex',\n      height: cardSize,\n      imageRendering: 'pixelated',\n      justifyContent: 'center',\n      lineBreak: 'normal',\n      margin: spacing / 2,\n      textDecoration: 'none',\n      width: cardSize,\n    },\n    name: {\n      backgroundColor: nameTitleBackground,\n      borderTop: `2px solid ${nameTitleTopBorder}`,\n      padding: spacing,\n      width: '100%',\n    },\n  };\n};\n\nexport default function GridCard({ resource, style }: GridCardProps) {\n  const styles = makeStyles(useTheme().state);\n  const { isLoading, error, data } = useQuery<PokemonResponse, Error>(\n    resource.url,\n    () => get(resource.url),\n  );\n  const statusProps = { isLoading, error };\n\n  const pokemon: PokemonResponse | undefined = data;\n  const pokemonName = pokemon\n    ? pokemon.name.replace(/^\\w/, (l) => l.toUpperCase())\n    : '';\n\n  return (\n    <Link\n      style={{\n        ...styles.card,\n        ...style,\n        backgroundImage: `url(${pokemon?.sprites.front_default})`,\n      }}\n      to={`/${pokemon?.id}`}\n    >\n      <StatusContainer {...statusProps}>\n        <article style={styles.name}>{pokemonName}</article>\n      </StatusContainer>\n    </Link>\n  );\n}\n","import React from 'react';\nimport { useInfiniteQuery, useQuery } from 'react-query';\nimport { parse } from 'querystring';\nimport { useTheme } from './theme';\nimport { Theme } from './theme/types';\nimport { getLogo, getAll } from './service';\nimport { PokemonList, PokemonResource } from './model/ResponseTypes';\nimport GridCard from './GridCard';\nimport { BottomSpacer, Error, Loading } from './utility';\n\nconst { innerWidth } = window;\nconst IS_MOBILE = innerWidth <= 480;\n\nconst makeStyles = ({ palette: colors, spacing }: Theme) => {\n  // TODO: figure out best way to do mobile styles\n  const margin = IS_MOBILE ? 0 : spacing * 2;\n  const spinnerSize = IS_MOBILE ? 45 : 60;\n\n  return {\n    grid: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      margin,\n    },\n    spinner: {\n      animationDuration: '1s',\n      animationIterationCount: 'infinite',\n      animationName: 'rotateBall',\n      animationDirection: 'forwards',\n      transformOrigin: 'center center',\n      height: spinnerSize,\n      imageRendering: 'pixelated',\n      margin: spacing * 2,\n      marginBottom: spacing * 3,\n      width: spinnerSize,\n    },\n  };\n};\n\nfunction onScrollEnd(callback: Function, hasNextPage?: boolean) {\n  const html = document.querySelector('html');\n  if (\n    html &&\n    html.scrollTop >= html.scrollHeight - window.innerHeight &&\n    hasNextPage\n  ) {\n    callback();\n  }\n}\n\nexport default function Dashboard() {\n  const styles = makeStyles(useTheme().state);\n  const { isLoading: isLoadingBall, data: spinner } = useQuery(\n    'pokeBall',\n    getLogo,\n  );\n  const {\n    data,\n    error,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n    status,\n  } = useInfiniteQuery<PokemonList, Error>('getAll', getAll, {\n    getNextPageParam: (lastPage, pages) => {\n      if (lastPage.next) {\n        const queryString = parse(new URL(lastPage.next).search.slice(1));\n        return queryString.offset;\n      }\n    },\n  });\n  const scrollListener = React.useCallback(() => {\n    document.addEventListener('scroll', () =>\n      onScrollEnd(fetchNextPage, hasNextPage),\n    );\n  }, [fetchNextPage, hasNextPage]);\n\n  React.useEffect(() => {\n    scrollListener();\n  }, [scrollListener]);\n\n  if (status === 'loading') {\n    return <Loading />;\n  } else if (status === 'error') {\n    return <Error error={error} />;\n  }\n\n  const { pages } = data!;\n  return (\n    <>\n      {/* @ts-ignore */}\n      <div style={styles.grid}>\n        {pages.map((page) => {\n          return page.results.map((resource: PokemonResource) => (\n            <GridCard key={resource.name} resource={resource}></GridCard>\n          ));\n        })}\n      </div>\n      {!isLoadingBall && isFetchingNextPage ? (\n        <img\n          src={spinner!.sprites.default}\n          alt=\"Loading\"\n          // @ts-ignore\n          style={styles.spinner}\n        />\n      ) : (\n        <BottomSpacer />\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport { useQuery } from 'react-query';\nimport { useParams } from 'react-router';\nimport { get, getUrl } from './service';\nimport { useTheme } from './theme';\nimport { Pokemon as PokemonResponse } from './model/ResponseTypes';\nimport { Theme } from './theme/types';\nimport { StatusContainer } from './utility';\n\ntype ParamsType = {\n  id: string;\n};\n\nconst makeStyles = ({ palette: colors, spacing }: Theme) => {\n  // TODO: figure out best way to do mobile styles\n  const cardSize = 256;\n  // TODO: put these in theme\n  const cardBackground = '#555';\n  const cardBorderColor = '#222';\n  const nameTitleTopBorder = '#aaa';\n  const nameTitleBackground = '#888';\n\n  return {\n    detailCard: {\n      alignItems: 'flex-end',\n      backgroundColor: cardBackground,\n      backgroundSize: '100%',\n      backgroundPositionX: 'center',\n      backgroundRepeat: 'no-repeat',\n      border: `2px solid ${cardBorderColor}`,\n      display: 'flex',\n      imageRendering: 'pixelated',\n      justifyContent: 'center',\n      height: cardSize,\n      lineBreak: 'normal',\n      margin: '0 auto',\n      width: cardSize,\n    },\n    name: {\n      backgroundColor: nameTitleBackground,\n      borderTop: `2px solid ${nameTitleTopBorder}`,\n      padding: spacing,\n      width: '100%',\n    },\n  };\n};\n\nexport default function DetailCard() {\n  const styles = makeStyles(useTheme().state);\n  const { id } = useParams<ParamsType>();\n  const resourceUrl = getUrl(`pokemon/${id}`);\n  const { isLoading, error, data } = useQuery<PokemonResponse, Error>(\n    resourceUrl,\n    () => get(resourceUrl),\n  );\n  const statusProps = { isLoading, error };\n\n  const pokemon: PokemonResponse | undefined = data;\n  const pokemonName = pokemon\n    ? pokemon.name.replace(/^\\w/, (l) => l.toUpperCase())\n    : '';\n\n  return (\n    <div>\n      <section\n        // @ts-ignore\n        style={{\n          ...styles.detailCard,\n          backgroundImage: `url(${data?.sprites.front_default})`,\n        }}\n      >\n        <StatusContainer {...statusProps}>\n          <article style={styles.name}>{pokemonName}</article>\n        </StatusContainer>\n      </section>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ThemeProvider, ThemeContext } from './theme';\nimport { Theme } from './theme/types';\nimport Dashboard from './Dashboard';\nimport DetailCard from './DetailCard';\nimport { getLogo } from './service';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n    },\n  },\n});\n\nconst makeStyles = ({ palette: colors, spacing }: Theme, logo: string) => {\n  const { innerWidth } = window;\n  const headerFontSize = innerWidth <= 480 ? '3rem' : '5rem';\n  const logoSize = innerWidth <= 480 ? 60 : 90;\n\n  return {\n    app: {\n      backgroundColor: colors.background.default,\n      color: colors.text.primary,\n      minHeight: '100%',\n      overflow: 'scroll',\n    },\n    header: {\n      alignItems: 'center',\n      display: 'flex',\n      fontSize: headerFontSize,\n      fontWeight: 300,\n      justifyContent: 'center',\n      marginBottom: '2rem',\n      marginLeft: spacing,\n      marginRight: spacing,\n    },\n    // <img src={logo} style={styles.logo} alt=\"Logo\" />\n    logo: {\n      backgroundImage: `url(${logo})`,\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: '150%',\n      height: logoSize,\n      imageRendering: 'pixelated',\n      width: logoSize,\n    },\n    table: { margin: 32, width: '90%' },\n  };\n};\n\nexport default function App() {\n  const [logo, setLogo] = React.useState('');\n  useEffect(() => {\n    queryClient\n      .fetchQuery<any, Error, any>('pokeBall', getLogo)\n      .then((item) => {\n        setLogo(item.sprites.default);\n      });\n  }, []);\n\n  return (\n    <ThemeProvider>\n      <ThemeContext.Consumer>\n        {({ dispatch, state: theme }) => {\n          const styles = makeStyles(theme, logo);\n\n          return (\n            <QueryClientProvider client={queryClient}>\n              <main style={styles.app}>\n                <h1 style={styles.header}>\n                  {/* @ts-ignore */}\n                  POKÉ<span style={styles.logo}></span>DEX\n                </h1>\n                <Router>\n                  <Switch>\n                    <Route path=\"/\" exact>\n                      <Dashboard />\n                    </Route>\n                    <Route path=\"/:id\">\n                      <DetailCard />\n                    </Route>\n                  </Switch>\n                </Router>\n              </main>\n            </QueryClientProvider>\n          );\n        }}\n      </ThemeContext.Consumer>\n    </ThemeProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}